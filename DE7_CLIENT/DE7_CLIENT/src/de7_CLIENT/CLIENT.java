/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package de7_CLIENT;

import de7_server.COMMUNICATOR;
import de7_server.SVFILE;
import java.awt.Dimension;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;

/**
 *
 * @author zLittleMasterz
 */
public class CLIENT extends javax.swing.JFrame {

    private ArrayList<PNLFILE> dsPnlFiles;
    private String currentPath;
    private Registry r;
    private COMMUNICATOR comm;
    private String name = "Client";
    
    public CLIENT() {
        initComponents();
        dsPnlFiles = new ArrayList<>();
       
        try {
            r = LocateRegistry.getRegistry("localhost", 2212);
            //r = LocateRegistry.getRegistry("192.168.228.4", 2212);
            comm = (COMMUNICATOR) r.lookup("rmiGetFiles");
        } catch (RemoteException ex) {
            Logger.getLogger(CLIENT.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NotBoundException ex) {
            Logger.getLogger(CLIENT.class.getName()).log(Level.SEVERE, null, ex);
        }
        boolean isConnect = false;
        while (!isConnect) {
            name = JOptionPane.showInputDialog(rootPane, "TÊN CỦA BẠN:");
            try {
                isConnect = comm.clConnect(name);
                if (!isConnect) {
                    JOptionPane.showMessageDialog(rootPane,"Tên này đã tồn tại, xin vui lòng nhập tên khác","Tên đã tồn tại", HEIGHT);
                }
            } catch (RemoteException ex) {
                Logger.getLogger(CLIENT.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        txtPathURL.setText("pc");
        try {
            search();
        } catch (RemoteException ex) {
            Logger.getLogger(CLIENT.class.getName()).log(Level.SEVERE, null, ex);
        }

        this.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent windowEvent) {
                if (JOptionPane.showConfirmDialog(rootPane,
                        "Ngắt kết nối và thoát chương trình?", "Đóng chương trình?",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {
                    try {
                        comm.clDisconnect(name);
                    } catch (RemoteException ex) {
                        System.out.println("ERROR: "+ex.getMessage()+" .windowClosing()");
                    }
                    System.exit(0);
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtPathURL = new javax.swing.JTextField();
        bttSearch = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        pnlView = new javax.swing.JPanel();
        bttBack = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtboxChiTietFile = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtPathURL.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        bttSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de7_CLIENT/icons/searchIcon.png"))); // NOI18N
        bttSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttSearchActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        jLabel1.setText("Tìm kiếm: ");

        jScrollPane1.getVerticalScrollBar().setUnitIncrement(16);

        pnlView.setBackground(new java.awt.Color(255, 255, 255));
        pnlView.setPreferredSize(new java.awt.Dimension(600, 50));

        javax.swing.GroupLayout pnlViewLayout = new javax.swing.GroupLayout(pnlView);
        pnlView.setLayout(pnlViewLayout);
        pnlViewLayout.setHorizontalGroup(
            pnlViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        pnlViewLayout.setVerticalGroup(
            pnlViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(pnlView);
        pnlView.getAccessibleContext().setAccessibleDescription("");
        pnlView.getAccessibleContext().setAccessibleParent(pnlView);

        bttBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de7_CLIENT/icons/backIcon.png"))); // NOI18N
        bttBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttBackActionPerformed(evt);
            }
        });

        txtboxChiTietFile.setColumns(20);
        txtboxChiTietFile.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtboxChiTietFile.setLineWrap(true);
        txtboxChiTietFile.setRows(5);
        txtboxChiTietFile.setWrapStyleWord(true);
        jScrollPane2.setViewportView(txtboxChiTietFile);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Chi tiết: ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(5, 5, 5)
                        .addComponent(txtPathURL, javax.swing.GroupLayout.PREFERRED_SIZE, 750, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(bttSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 891, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bttBack, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 620, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jLabel1))
                    .addComponent(txtPathURL, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bttSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bttBack, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 495, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bttSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttSearchActionPerformed
        try {
            search();
        } catch (RemoteException ex) {
            Logger.getLogger(CLIENT.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bttSearchActionPerformed

    private void bttBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttBackActionPerformed
        try {
            int soGach = currentPath.length() - currentPath.replace("\\", "").length();
            String name = currentPath.substring(currentPath.lastIndexOf("\\")+1);
            if (soGach==1&&name.isEmpty()) {
                txtPathURL.setText("pc");
                search();
                return;
            }

            String backPath = currentPath.substring(0, currentPath.lastIndexOf("\\"));
            soGach = backPath.length() - backPath.replace("\\", "").length();
            if (soGach==0) {
                backPath = backPath+"\\";
            }
            currentPath = backPath;
            txtPathURL.setText(currentPath);
            search();
        } catch (Exception e) {
            txtPathURL.setText("pc");
            try {
                search();
            } catch (RemoteException ex) {
                Logger.getLogger(CLIENT.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_bttBackActionPerformed

    public JTextField getTxtPathURL() {
        return txtPathURL;
    }

    public JTextArea getTxtboxChiTietFile() {
        return txtboxChiTietFile;
    }

    public void settxtBoxChiTiet(PNLFILE selectedFile){
        txtboxChiTietFile.setText("Tên: "+selectedFile.getName()+"\n");
        txtboxChiTietFile.append("Đường dẫn: "+selectedFile.getAbsolutePath()+"\n");
        txtboxChiTietFile.append("Loại: "+selectedFile.getType());
    }
    
    public void setTxtPathURL(String path){
        txtPathURL.setText(path);
        
    }
    
    public void search() throws RemoteException{
        String path = txtPathURL.getText();
        pnlView.removeAll();
        pnlView.setPreferredSize(new Dimension(600, 50));
        pnlView.revalidate();
        pnlView.repaint();
        dsPnlFiles.clear();
        currentPath = path;
        txtPathURL.setText(currentPath);
        ArrayList<SVFILE> dsSvfiles = comm.getFile(path,name);
        
        if (dsSvfiles==null) {
            JOptionPane.showMessageDialog(rootPane, "Truy cập đã bị Server từ chối");
            return;
        }
        for (SVFILE svfile : dsSvfiles) {
            PNLFILE serverfile = new PNLFILE(svfile, this);
            dsPnlFiles.add(serverfile);
        }
        pnlView.setPreferredSize(new Dimension(pnlView.getPreferredSize().width, pnlView.getPreferredSize().height * dsPnlFiles.size()));
        for (int i = 0; i < dsPnlFiles.size(); i++) {
            dsPnlFiles.get(i).setSize(dsPnlFiles.get(i).getPreferredSize());
            dsPnlFiles.get(i).setLocation(0, i * dsPnlFiles.get(i).getSize().height);
            pnlView.add(dsPnlFiles.get(i));
            dsPnlFiles.get(i).setVisible(true);
        }
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CLIENT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CLIENT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CLIENT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CLIENT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CLIENT().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bttBack;
    private javax.swing.JButton bttSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPanel pnlView;
    private javax.swing.JTextField txtPathURL;
    private javax.swing.JTextArea txtboxChiTietFile;
    // End of variables declaration//GEN-END:variables
}
